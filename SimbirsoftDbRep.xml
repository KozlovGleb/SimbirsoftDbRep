<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimbirsoftDbRep</name>
    </assembly>
    <members>
        <member name="T:SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager">
            <summary>
            Interface for Auth Manager.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager.UsersRefreshTokensReadOnlyDictionary">
            <summary>
            RT dict.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager.GenerateTokens(System.String,System.Security.Claims.Claim[],System.DateTime)">
            <summary>
            Generate tokens.
            </summary>
            <param name="username">User names.</param>
            <param name="claims">Claim's array.</param>
            <param name="now">Now date.</param>
            <returns><see cref="T:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthResult"/></returns>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager.Refresh(System.String,System.String,System.DateTime)">
            <summary>
            Go refresh.
            </summary>
            <param name="refreshToken">RT.</param>
            <param name="accessToken">AT.</param>
            <param name="now">Now date.</param>
            <returns></returns>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager.RemoveExpiredRefreshTokens(System.DateTime)">
            <summary>
            Delete RT.
            </summary>
            <param name="now">Now date.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager.RemoveRefreshTokenByUserName(System.String)">
            <summary>
            Refresh by user.
            </summary>
            <param name="userName">User name.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager.DecodeJwtToken(System.String)">
            <summary>
            Decode token.
            </summary>
            <param name="token">AT token.</param>
        </member>
        <member name="T:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager">
            <summary>
            Auth manager.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager.#ctor(SimbirsoftDbRep.Authentication.Insfrastructure.JwtConfig)">
            <summary>
            Initialize object of <see cref="T:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager"/>
            </summary>
            <param name="jwtTokenConfig">Configuration <see cref="!:JwtTokenConfig"/></param>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager.RemoveExpiredRefreshTokens(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager.RemoveRefreshTokenByUserName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager.GenerateTokens(System.String,System.Security.Claims.Claim[],System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager.Refresh(System.String,System.String,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager.DecodeJwtToken(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthManager.GenerateRefreshTokenString">
            <inheritdoc />
        </member>
        <member name="T:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthResult">
            <summary>
            Tokens result.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthResult.AccessToken">
            <summary>
            AT.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.JwtAuthResult.RefreshToken">
            <summary>
            RT.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Authentication.Insfrastructure.RefreshToken">
            <summary>
            RT model.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.RefreshToken.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.RefreshToken.TokenString">
            <summary>
            RT value.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.RefreshToken.ExpireAt">
            <summary>
            Expipe date.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.JwtConfig.Secret">
            <summary>
            Secret.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.JwtConfig.Issuer">
            <summary>
            Issuer.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.JwtConfig.Audience">
            <summary>
            Audience.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.JwtConfig.AccessTokenExpiration">
            <summary>
            AT time.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Insfrastructure.JwtConfig.RefreshTokenExpiration">
            <summary>
            RT time.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtRefreshTokenCache.#ctor(SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager)">
            <summary>
            Initialize <see cref="T:SimbirsoftDbRep.Authentication.Insfrastructure.JwtRefreshTokenCache"/>
            </summary>
            <param name="jwtAuthManager"><see cref="T:SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager"/></param>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtRefreshTokenCache.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Remove old tokens.
            </summary>
            <param name="stoppingToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns></returns>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtRefreshTokenCache.DoWork(System.Object)">
            <summary>
            Remove action.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtRefreshTokenCache.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stop removing.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Authentication.Insfrastructure.JwtRefreshTokenCache.Dispose">
            <summary>
            Dispose timer.
            </summary>
        </member>
        <member name="F:SimbirsoftDbRep.Authentication.Insfrastructure.UserRoles.Admin">
            <summary>
            Admin role.
            </summary>
        </member>
        <member name="F:SimbirsoftDbRep.Authentication.Insfrastructure.UserRoles.Default">
            <summary>
            Default role.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Authentication.Models.Role">
            <summary>
            Role.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Models.Role.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Models.Role.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Authentication.Models.UserRoles">
            <summary>
            User roles.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Models.UserRoles.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Models.UserRoles.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Authentication.Models.UserRoles.Role">
            <summary>
            Role.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Database.Domain.User">
            <summary>
            Модель пользователя приложения
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.User.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.User.Login">
            <summary>
            Login.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.User.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.BaseEntity.Id">
            <summary>
            Идентификатор записи.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Database.Domain.BaseEntityWithLinks`2">
            <summary>
            Базовый класс для слабых сущностей.
            </summary>
            <typeparam name="TEntity1">Связанная сущность - 1.</typeparam>
            <typeparam name="TEntity2">Связанная сущность - 2.</typeparam>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.BaseEntityWithLinks`2.Entity1Id">
            <summary>
            Идентификатор первой связанной сущности.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.BaseEntityWithLinks`2.Entity1">
            <summary>
            Связанная сущность - 1.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.BaseEntityWithLinks`2.Entity2Id">
            <summary>
            Идентификатор второй связанной сущности.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.BaseEntityWithLinks`2.Entity2">
            <summary>
            Связанная сущность - 2.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.Doctor.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.Doctor.Phone">
            <summary>
            Телефон.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.Patient.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.Patient.PhoneNumber">
            <summary>
            Телефонный номер.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.PatientCard.DiseaseName">
            <summary>
            Название болезни.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.PatientCard.DateOfVisit">
            <summary>
            Дата визита.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.PatientCard.DoctorId">
            <summary>
            ID доктора.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Domain.PatientCard.PatientId">
            <summary>
            ID пациента.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Database.Bootstrap.DbConfigurations">
            <summary>
            Конфигурации БД.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Database.Bootstrap.DbConfigurations.ConfigureDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Подключение DbContext.
            </summary>
            <param name="services">Коллекция сервисов.</param>
            <param name="configuration">Конфигурация.</param>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Context.HospitalContext.Patients">
            <summary>
            Пациенты.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Context.HospitalContext.Doctors">
            <summary>
            Доктора.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Context.HospitalContext.PatientCards">
            <summary>
            Карты пациентов.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Context.HospitalContext.Users">
            <summary>
            Users.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Context.HospitalContext.Roles">
            <summary>
            Roles.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Database.Context.HospitalContext.UserRoles">
            <summary>
            User roles.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Database.Context.HospitalContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Database.Context.HospitalContext"/>.
            </summary>
            <param name="options">Опции для конфигурации контекста.</param>
        </member>
        <member name="T:SimbirsoftDbRep.Startup">
            <summary>
            Конфигурация приложения.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:SimbirsoftDbRep.Startup"/>.
            </summary>
            <param name="configuration">Конфигурация.</param>
        </member>
        <member name="P:SimbirsoftDbRep.Startup.Configuration">
            <summary>
            Конфигурация.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SimbirsoftDbRep.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)" -->
        <member name="M:SimbirsoftDbRep.Controllers.AccountController.#ctor(Microsoft.Extensions.Logging.ILogger{SimbirsoftDbRep.Controllers.AccountController},SimbirsoftDbRep.Services.Interfaces.Login.IUserService,SimbirsoftDbRep.Authentication.Insfrastructure.IJwtAuthManager)">
            <summary>
            Initialize object of <see cref="T:SimbirsoftDbRep.Controllers.AccountController"/>
            </summary>
            <param name="logger">Logger.</param>
            <param name="userService">Service.</param>
            <param name="jwtAuthManager">Auth manager.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.AccountController.Login(SimbirsoftDbRep.Models.Requests.Login.LoginRequest)">
            <summary>
            LogIn endpoint.
            </summary>
            <param name="request">LogIn request <see cref="T:SimbirsoftDbRep.Models.Requests.Login.LoginRequest"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/></returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.AccountController.GetCurrentUser">
            <summary>
            Get current user enpoint
            </summary>
            <returns><see cref="T:SimbirsoftDbRep.Models.Responses.Login.LoginResult"/></returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.AccountController.Logout">
            <summary>
            Logout endpoint.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.AccountController.RefreshToken(SimbirsoftDbRep.Models.Requests.Login.RefreshTokenRequest)">
            <summary>
            Endpoint for refresh.
            </summary>
            <param name="request"><see cref="T:SimbirsoftDbRep.Models.Requests.Login.RefreshTokenRequest"/></param>
            <returns><see cref="T:SimbirsoftDbRep.Models.Responses.Login.LoginResult"/></returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.DoctorsController.#ctor(Microsoft.Extensions.Logging.ILogger{SimbirsoftDbRep.Controllers.PatientsController},AutoMapper.IMapper,SimbirsoftDbRep.Database.Context.HospitalContext)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Controllers.PatientsController"/>
            </summary>
            <param name="patientService">Сервис.</param>
            <param name="logger">Логгер.</param>
            <param name="mapper">Маппер.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.DoctorsController.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Получение перечня пациентов.
            </summary>
            <returns>Коллекция сущностей "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.DoctorsController.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Получение пациента по Id.
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.DoctorsController.PostAsync(SimbirsoftDbRep.Models.Requests.Doctor.CreateDoctorRequest,System.Threading.CancellationToken)">
            <summary>
            Добавление сущности "Пациент".
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.DoctorsController.PutAsync(SimbirsoftDbRep.Models.Requests.Doctor.UpdateDoctorRequest,System.Threading.CancellationToken)">
            <summary>
            Изменение сущности "Пациент".
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.DoctorsController.DeleteAsync(System.Threading.CancellationToken,System.Int64[])">
            <summary>
            Удаление сущностей "Пациент".
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.Mapping.DoctorProfile.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Controllers.Mapping.DoctorProfile"/>.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.Mapping.PatientCardProfile.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Controllers.Mapping.PatientProfile"/>.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Controllers.Mapping.PatientProfile">
            <summary>
            Маппинг для запросов и ответов контроллера сущности "Пациент".
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.Mapping.PatientProfile.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Controllers.Mapping.PatientProfile"/>.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientCardsController.#ctor(Microsoft.Extensions.Logging.ILogger{SimbirsoftDbRep.Controllers.PatientCardsController},AutoMapper.IMapper,SimbirsoftDbRep.Database.Context.HospitalContext)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Controllers.PatientsController"/>
            </summary>
            <param name="patientService">Сервис.</param>
            <param name="logger">Логгер.</param>
            <param name="mapper">Маппер.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientCardsController.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Получение перечня пациентов.
            </summary>
            <returns>Коллекция сущностей "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientCardsController.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Получение пациента по Id.
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientCardsController.PostAsync(SimbirsoftDbRep.Models.Requests.PatientCard.CreatePatientCardRequest,System.Threading.CancellationToken)">
            <summary>
            Добавление сущности "Пациент".
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientCardsController.PutAsync(SimbirsoftDbRep.Models.Requests.PatientCard.UpdatePatientCardRequest,System.Threading.CancellationToken)">
            <summary>
            Изменение сущности "Пациент".
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientCardsController.DeleteAsync(System.Threading.CancellationToken,System.Int64[])">
            <summary>
            Удаление сущностей "Пациент".
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Controllers.PatientsController">
            <summary>
            Контроллер для работы с данными о пациентах.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientsController.#ctor(SimbirsoftDbRep.Services.IPatientService,Microsoft.Extensions.Logging.ILogger{SimbirsoftDbRep.Controllers.PatientsController},AutoMapper.IMapper,SimbirsoftDbRep.Database.Context.HospitalContext)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Controllers.PatientsController"/>
            </summary>
            <param name="patientService">Сервис.</param>
            <param name="logger">Логгер.</param>
            <param name="mapper">Маппер.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientsController.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Получение перечня пациентов.
            </summary>
            <returns>Коллекция сущностей "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientsController.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Получение пациента по Id.
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientsController.PostAsync(SimbirsoftDbRep.Models.Requests.CreatePatientRequest,System.Threading.CancellationToken)">
            <summary>
            Добавление сущности "Пациент".
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientsController.PutAsync(SimbirsoftDbRep.Models.Requests.UpdatePatientRequest,System.Threading.CancellationToken)">
            <summary>
            Изменение сущности "Пациент".
            </summary>
            <returns>Cущность "Пациент".</returns>
        </member>
        <member name="M:SimbirsoftDbRep.Controllers.PatientsController.DeleteAsync(System.Threading.CancellationToken,System.Int64[])">
            <summary>
            Удаление сущностей "Пациент".
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.DTO.BaseDto.Id">
            <summary>
            Идентификатор записи.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.DTO.DoctorDTO.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.DTO.DoctorDTO.Phone">
            <summary>
            Телефон.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.DTO.PatientCardDto.DiseaseName">
            <summary>
            Название болезни.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.DTO.PatientCardDto.DateOfVisit">
            <summary>
            Дата визита.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Models.DTO.PatientDTO">
            <summary>
            DTO для <see cref="!:Patient"/>
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.DTO.PatientDTO.Name">
            <summary>
            Имя пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.DTO.PatientDTO.PhoneNumber">
            <summary>
            Телефонный номер пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.Doctor.CreateDoctorRequest.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.Doctor.CreateDoctorRequest.Phone">
            <summary>
            Телефон.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.Doctor.UpdateDoctorRequest.Id">
            <summary>
            Идентификатор сущности.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.Doctor.UpdateDoctorRequest.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.Doctor.UpdateDoctorRequest.Phone">
            <summary>
            Телефон.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.Login.LoginRequest.UserName">
            <summary>
            Name of user.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.Login.LoginRequest.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.CreatePatientCardRequest.DiseaseName">
            <summary>
            Название болезни.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.CreatePatientCardRequest.DateOfVisit">
            <summary>
            Дата визита.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.CreatePatientCardRequest.DoctorId">
            <summary>
            ID доктора.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.CreatePatientCardRequest.PatientId">
            <summary>
            ID пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.UpdatePatientCardRequest.Id">
            <summary>
            Идентификатор сущности.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.UpdatePatientCardRequest.DiseaseName">
            <summary>
            Название болезни.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.UpdatePatientCardRequest.DateOfVisit">
            <summary>
            Дата визита.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.UpdatePatientCardRequest.DoctorId">
            <summary>
            ID доктора.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.PatientCard.UpdatePatientCardRequest.PatientId">
            <summary>
            ID пациента.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Models.Requests.CreatePatientRequest">
            <summary>
            Запрос на создание нового пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.CreatePatientRequest.Name">
            <summary>
            Имя пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.CreatePatientRequest.PhoneNumber">
            <summary>
            Номер телефона пациента.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Models.Requests.UpdatePatientRequest">
            <summary>
            Запрос на изменение пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.UpdatePatientRequest.Id">
            <summary>
            Идентификатор сущности.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.UpdatePatientRequest.Name">
            <summary>
            Имя пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Requests.UpdatePatientRequest.PhoneNumber">
            <summary>
            Номер телефона пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.Doctor.DoctorResponce.Id">
            <summary>
            Идентификатор записи.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.Doctor.DoctorResponce.Name">
            <summary>
            Имя доктора.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.Doctor.DoctorResponce.Phone">
            <summary>
            Телефонный номер доктора.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.PatientCard.PatientCardResponse.DiseaseName">
            <summary>
            Название болезни.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.PatientCard.PatientCardResponse.DateOfVisit">
            <summary>
            Дата визита.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.PatientCard.PatientCardResponse.DoctorId">
            <summary>
            ID доктора.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.PatientCard.PatientCardResponse.PatientId">
            <summary>
            ID пациента.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Models.Responses.Patient.PatientResponse">
            <summary>
            Ответ на запросы для пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.Patient.PatientResponse.Id">
            <summary>
            Идентификатор записи.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.Patient.PatientResponse.Name">
            <summary>
            Имя пациента.
            </summary>
        </member>
        <member name="P:SimbirsoftDbRep.Models.Responses.Patient.PatientResponse.PhoneNumber">
            <summary>
            Телефонный номер пациента.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.BaseRepository`2">
            <summary>
            Базовый класс репозитория для работы с CRUD.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Доменная модель.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.BaseRepository`2.#ctor(SimbirsoftDbRep.Database.Context.HospitalContext,AutoMapper.IMapper)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Repositories.BaseRepository`2"/>.
            </summary>
            <param name="context">Контекст данных.</param>
            <param name="mapper">Маппер.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.BaseRepository`2.CreateAsync(`0)">
            <inheritdoc cref="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.ICreatable`2.CreateAsync(`0)"/>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.BaseRepository`2.DeleteAsync(System.Int64[])">
            <inheritdoc cref="!:IDeletable&lt;TDto, TModel&gt;.DeleteAsync(long[])"/>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.BaseRepository`2.GetAsync(System.Int64)">
            <inheritdoc cref="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IGettableById`2.GetAsync(System.Int64)"/>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.BaseRepository`2.UpdateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc cref="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IUpdatable`2.UpdateAsync(`0,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.BaseRepository`2.GetAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IGettable`2.GetAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.BaseRepository`2.DefaultIncludeProperties(Microsoft.EntityFrameworkCore.DbSet{`1})">
            <summary>
            Добавляет к выборке связанные параметры.
            </summary>
            <param name="dbSet">Коллекция DbSet репозитория.</param>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Bootstrap.RepositoriesConfiguration">
            <summary>
            Расширения для конфигурации репозиториев.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.Bootstrap.RepositoriesConfiguration.ConfigureRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Конфигурирование репозиториев.
            </summary>
            <param name="services">Коллекция сервисов из Startup.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.DoctorRepository.#ctor(SimbirsoftDbRep.Database.Context.HospitalContext,AutoMapper.IMapper)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Repositories.PatientRepository"/>.
            </summary>
            <param name="context">Контекст данных.</param>
            <param name="mapper">Маппер.</param>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.CRUD.ICreatable`2">
            <summary>
            Интерфейс для создания сущности.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.ICreatable`2.CreateAsync(`0)">
            <summary>
            Создание сущности.
            </summary>
            <param name="dto">DTO.</param>
            <returns>Идентификатор созданной сущности.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.CRUD.ICrudRepository`2">
            <summary>
            Интерфейс репозитория с базовыми CRUD-операциями.
            </summary>
            <typeparam name="TDto"></typeparam>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IDeletable">
            <summary>
            Интерфейс для удаления сущностей.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IDeletable.DeleteAsync(System.Int64[])">
            <summary>
            Групповое удаление сущностей.
            </summary>
            <param name="ids">Идентификаторы.</param>
            <returns>Задача, представляющая асинхронную операцию.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IGettable`2">
            <summary>
            Интерфейс для получения сущностей.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IGettable`2.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Получение сущностей.
            </summary>
            <param name="token">Экземпляр <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns></returns>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IGettableById`2">
            <summary>
            Интерфейс для получения сущности по идентификатору.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IGettableById`2.GetAsync(System.Int64)">
            <summary>
            Получение сущности по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <returns>Экземпляр сущности.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IUpdatable`2">
            <summary>
            Интерфейс для изменения сущности.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.Interfaces.CRUD.IUpdatable`2.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Изменение сущности.
            </summary>
            <param name="dto">DTO.</param>
            <param name="token">Экземпляр <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Обновленная сущность.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.IDoctorRepository">
            <summary>
            Интерфейс репозитория для работы с сущностями "Доктор"
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.IPatientCardRepository">
            <summary>
            Интерфейс репозитория для работы с сущностями "Карта пациента".
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Interfaces.IPatientRepositoty">
            <summary>
            Интерфейс репозитория для работы с сущностями "Пациент".
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.Mapping.PatientProfile">
            <summary>
            Профиль маппинга (пациент).
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.Mapping.PatientProfile.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Repositories.Mapping.PatientProfile"/>
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.PatientCardRepository.#ctor(SimbirsoftDbRep.Database.Context.HospitalContext,AutoMapper.IMapper)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Repositories.PatientRepository"/>.
            </summary>
            <param name="context">Контекст данных.</param>
            <param name="mapper">Маппер.</param>
        </member>
        <member name="T:SimbirsoftDbRep.Repositories.PatientRepository">
            <summary>
            Репозиторий для работы с сущностями "Пациент".
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Repositories.PatientRepository.#ctor(SimbirsoftDbRep.Database.Context.HospitalContext,AutoMapper.IMapper)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Repositories.PatientRepository"/>.
            </summary>
            <param name="context">Контекст данных.</param>
            <param name="mapper">Маппер.</param>
        </member>
        <member name="T:SimbirsoftDbRep.Services.Bootstrap.ServicesConfiguration">
            <summary>
            Методы засширения для конфигурации сервисов.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Services.Bootstrap.ServicesConfiguration.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Конфигурация сервисов.
            </summary>
            <param name="services">Коллекция сервисов из Startup.</param>
        </member>
        <member name="T:SimbirsoftDbRep.Services.CRUD.ICreatable`1">
            <summary>
            Интерфейс сервиса для создания сущности.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Services.CRUD.ICreatable`1.CreateAsync(`0)">
            <summary>
            Создание сущности.
            </summary>
            <param name="dto">DTO.</param>
            <returns>Идентификатор созданной сущности.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Services.CRUD.IDeletable">
            <summary>
            Интерфейс сервиса для удаления сущностей.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Services.CRUD.IDeletable.DeleteAsync(System.Int64[])">
            <summary>
            Групповое удаление сущностей.
            </summary>
            <param name="ids">Идентификаторы.</param>
            <returns>Задача, представляющая асинхронную операцию.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Services.CRUD.IGettable`1">
            <summary>
            Интерфейс сервиса для получения сущностей.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Services.CRUD.IGettable`1.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Получение сущностей.
            </summary>
            <param name="token">Экземпляр <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Сущности.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Services.CRUD.IGettableById`1">
            <summary>
            Интерфейс сервиса для получения сущности по идентификатору.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Services.CRUD.IGettableById`1.GetAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Получение сущности по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <returns>Экземпляр сущности.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Services.CRUD.IUpdatable`1">
            <summary>
            Интерфейс сервиса для изменения сущности.
            </summary>
            <typeparam name="TDto">DTO.</typeparam>
            <typeparam name="TModel">Domain model.</typeparam>
        </member>
        <member name="M:SimbirsoftDbRep.Services.CRUD.IUpdatable`1.UpdateAsync(`0)">
            <summary>
            Изменение сущности.
            </summary>
            <param name="dto">DTO.</param>
            <param name="token">Экземпляр <see cref="!:CancellationToken"/>.</param>
            <returns>Обновленная сущность.</returns>
        </member>
        <member name="T:SimbirsoftDbRep.Services.IPatientService">
            <summary>
            Интерфейс сервиса для работы с данными о пациенте.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Services.Interfaces.Login.IUserService.IsAnExistingUser(System.String)">
            <summary>
            Check user.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Services.Interfaces.Login.IUserService.IsValidUserCredentials(System.String,System.String)">
            <summary>
            Validate user data.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Services.Interfaces.Login.IUserService.GetUserRole(System.String)">
            <summary>
            Get user role if exists.
            </summary>
        </member>
        <member name="T:SimbirsoftDbRep.Services.PatientService">
            <summary>
            Сервис для работы с данными о пациенте.
            </summary>
        </member>
        <member name="M:SimbirsoftDbRep.Services.PatientService.#ctor(SimbirsoftDbRep.Repositories.Interfaces.IPatientRepositoty)">
            <summary>
            Инициализирует экземпляр <see cref="T:SimbirsoftDbRep.Services.PatientService"/>.
            </summary>
            <param name="repository">Репозиторий.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Services.PatientService.CreateAsync(SimbirsoftDbRep.Models.DTO.PatientDTO)">
            <inheritdoc cref="!:ICreatable&lt;TDto&gt;.CreateAsync(TDto)"/>
        </member>
        <member name="M:SimbirsoftDbRep.Services.PatientService.DeleteAsync(System.Int64[])">
            <inheritdoc cref="!:IDeletable.DeleteAsync(long[])"/>
        </member>
        <member name="M:SimbirsoftDbRep.Services.PatientService.GetAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc cref="!:IGettableById&lt;TDto&gt;.GetAsync(long, CancellationToken)"/>
        </member>
        <member name="M:SimbirsoftDbRep.Services.PatientService.GetAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="!:IGettable&lt;TDto&gt;.GetAsync(CancellationToken)"/>
        </member>
        <member name="M:SimbirsoftDbRep.Services.PatientService.UpdateAsync(SimbirsoftDbRep.Models.DTO.PatientDTO)">
            <inheritdoc cref="!:IUpdatable&lt;TDto&gt;.UpdateAsync(TDto)"/>
        </member>
        <member name="M:SimbirsoftDbRep.Services.UserService.#ctor(Microsoft.Extensions.Logging.ILogger{SimbirsoftDbRep.Services.UserService},SimbirsoftDbRep.Database.Context.HospitalContext)">
            <summary>
            Initialize <see cref="T:SimbirsoftDbRep.Services.UserService"/>
            </summary>
            <param name="logger">Logger.</param>
            <param name="context">DB Context.</param>
        </member>
        <member name="M:SimbirsoftDbRep.Services.UserService.IsValidUserCredentials(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:SimbirsoftDbRep.Services.UserService.IsAnExistingUser(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SimbirsoftDbRep.Services.UserService.GetUserRole(System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
